--==============================================================================
-- 						CÓDIGO VHDL PARA DESPLIEGUE VGA									--
-- 					  M.I. BRYAN EMMANUEL ALVAREZ SERNA									--
-- 								V.1. 15 NOVIEMBRE 2021										--
--																										--
-- ESTE CÓDIGO ES APLICABLE PARA 3 Y 12 SALIDAS											--
-- PENSADO PARA LAS TARJETAS CYCLONE IV Y DE-10 LITE									--	
-- LEER LAS LÍNEAS COMENTADAS PARA SU CORRECTO FUNCIONAMIENTO						--
-- =============================================================================

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY vga_rgb IS
PORT(CLK, RST: IN STD_LOGIC;
	  HSYNC, VSYNC: OUT STD_LOGIC;
	  --RGB: OUT STD_LOGIC_VECTOR (2 DOWNTO 0)); -- SALIDA PARA TARJETA CYCLONE IV
	  R, G,B: OUT STD_LOGIC_VECTOR(3 DOWNTO 0)); -- SALIDAS PARA TARJETA DE-10 LITE
END vga_rgb;

ARCHITECTURE BEAS OF vga_rgb IS
-- VALORES PARA MONITOR DE 640X480
CONSTANT HD: INTEGER := 639; -- PANTALLA HORIZONTAL (640)
CONSTANT VD: INTEGER := 479; -- PANTALLA VERTICAL (480)

CONSTANT HFP: INTEGER := 16; -- BORDE DERECHO (FRONT PORCH)
CONSTANT HSP: INTEGER := 96; -- SINCRONIZACION
CONSTANT HBP: INTEGER := 48; -- BORDE IZQUIERDO (BACK PORCH)

CONSTANT VFP: INTEGER := 11; -- BORDE DERECHO (FRONT PORCH)
CONSTANT VSP: INTEGER := 2; --  SINCRONIZACION
CONSTANT VBP: INTEGER := 31; -- BORDE IZQUIERDO (BACK PORCH)

SIGNAL HPOS: INTEGER := 0; -- BARRIDO HORIZONTAL
SIGNAL VPOS: INTEGER := 0; --  BARRIDO VERTICAL

SIGNAL VIDEO: STD_LOGIC := '0'; -- ACTIVAION DE SALIDA DE VIDEO

BEGIN

	PROCESS(CLK, RST) -- CONTADOR HORIZONTAL
	BEGIN
		IF RST = '1' THEN
			HPOS <= 0;
			ELSIF RISING_EDGE (CLK) THEN
				IF HPOS = (HD + HFP + HSP + HBP) THEN
					HPOS <= 0;
				ELSE
					HPOS <= HPOS + 1;
				END IF;
			END IF;		
	END PROCESS;
	
	PROCESS(CLK, RST, HPOS) -- CONTADOR VERTICAL
	BEGIN
		IF RST = '1' THEN
			VPOS <= 0;
			ELSIF RISING_EDGE (CLK) THEN
				IF HPOS = (HD + HFP + HSP + HBP) THEN
					IF VPOS = (VD + VFP + VSP + VBP) THEN
						VPOS <= 0;
					ELSE
						VPOS <= VPOS + 1;
					END IF;
				END IF;	
			END IF;
	END PROCESS;
	
	PROCESS(CLK, RST, HPOS) -- SINCRONIZACION HORIZONTAL
	BEGIN
		IF RST = '1' THEN
			HSYNC <= '0';
		ELSIF FALLING_EDGE(CLK) THEN
			IF HPOS <= (HD + HFP) OR HPOS > (HD + HFP + HSP) THEN
				HSYNC <= '1';
			ELSE
				HSYNC <= '0';
			END IF;
		END IF;
	END PROCESS;
	
	PROCESS(CLK, RST, VPOS) -- SINCRONIZACION VERTICAL
	BEGIN
		IF RST = '1' THEN
			VSYNC <= '0';
		ELSIF FALLING_EDGE(CLK) THEN
			IF VPOS <= (VD + VFP) OR VPOS > (VD + VFP + VSP) THEN
				VSYNC <= '1';
			ELSE
				VSYNC <= '0';
			END IF;
		END IF;
	END PROCESS;
	
	PROCESS(CLK, RST, HPOS, VPOS) -- SALIDA DE VIDEO
	BEGIN
		IF RST = '1' THEN
			VIDEO <= '0';
		ELSIF FALLING_EDGE(CLK) THEN
			IF HPOS <= HD AND VPOS <= VD THEN
				VIDEO <= '1';
			ELSE
				VIDEO <= '0';
			END IF;
		END IF;
	END PROCESS;
	
	-- PROCESO VALIDO PARA CYCLONE IV 
--	PROCESS(CLK, RST, HPOS, VPOS, VIDEO) -- PROCESO PARA COLOREAR LOS PIXELES
--	BEGIN
--		IF RST = '1' THEN
--			RGB <= "000";
--		ELSIF FALLING_EDGE(CLK) THEN
--			IF VIDEO = '1' THEN
--				IF (HPOS >= 10 AND HPOS <= 600) AND (VPOS >= 10 AND VPOS <= 400) THEN
--					RGB <= "100";
--					ELSE
--						RGB <= "000"; 
--					END IF;
--				ELSE
--					RGB <= "000";
--				END IF;
--			END IF;
	--END PROCESS;
	
	-- PROCESO VALIDO PARA DE-10 LITE
	PROCESS(CLK, RST, HPOS, VPOS, VIDEO) -- PROCESO PARA COLOREAR LOS PIXELES
	BEGIN
		IF RST = '1' THEN
			R <= "0000";
   		G <= "0000";
			B <= "0000";
		ELSIF FALLING_EDGE(CLK) THEN
			IF VIDEO = '1' THEN
				IF (HPOS >= 10 AND HPOS <= 600) AND (VPOS >= 10 AND VPOS <= 400) THEN
					R <= "1111";
   				G <= "1111";
					B <= "0000";
					
					ELSE
					R <= "0000";
					G <= "0000";
					B <= "0000";
					END IF;
				ELSE
					R <= "0000";
   				G <= "0000";
					B <= "0000";
				END IF;
			END IF;
	END PROCESS;

END BEAS;